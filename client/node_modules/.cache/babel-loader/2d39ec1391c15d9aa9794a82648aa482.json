{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; // importing local storage\n\nimport storage from 'redux-persist/lib/storage';\nimport cartReducer from './cart/cart.reducer';\nimport userReducer from './user/user.reducer';\nimport directoryReducer from './directory/directory.reducer';\nconst persistConfig = {\n  //starting to store info at root\n  key: 'root',\n  storage,\n  // array containing string names of reducer\n  // that we want to store\n  whitelist: ['cart']\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n}); // modified version of root reducer that persists\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","cartReducer","userReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop","shopReducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,MAAMC,aAAa,GAAG;AAClB;AACAC,EAAAA,GAAG,EAAC,MAFc;AAGlBL,EAAAA,OAHkB;AAIlB;AACA;AACAM,EAAAA,SAAS,EAAC,CAAC,MAAD;AANQ,CAAtB;AASA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,IAAI,EAACN,WAD2B;AAEhCO,EAAAA,IAAI,EAACR,WAF2B;AAGhCS,EAAAA,SAAS,EAACP,gBAHsB;AAIhCQ,EAAAA,IAAI,EAAEC;AAJ0B,CAAD,CAAnC,C,CAOA;;AACA,eAAeb,cAAc,CAACK,aAAD,EAAeG,WAAf,CAA7B","sourcesContent":["import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\n// importing local storage\nimport storage from 'redux-persist/lib/storage';\nimport cartReducer from './cart/cart.reducer'\nimport userReducer from './user/user.reducer';\nimport directoryReducer from './directory/directory.reducer';\n\nconst persistConfig = {\n    //starting to store info at root\n    key:'root',\n    storage,\n    // array containing string names of reducer\n    // that we want to store\n    whitelist:['cart']\n}\n\nconst rootReducer = combineReducers({\n    user:userReducer,\n    cart:cartReducer,\n    directory:directoryReducer,\n    shop: shopReducer\n});\n\n// modified version of root reducer that persists\nexport default persistReducer(persistConfig,rootReducer)"]},"metadata":{},"sourceType":"module"}