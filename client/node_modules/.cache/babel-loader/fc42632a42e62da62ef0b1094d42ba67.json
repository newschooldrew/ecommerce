{"ast":null,"code":"// moving fetchCollectionsStartAsync to this file\nimport { takeEvery, call } from 'redux-saga/effects'; // takeEvery\n// creates non blocking call in order to create other sagas\n// can cancel tasks coming from \n// call\n// the code that invokes the method\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../firebase/firebase-utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('fetchCollectionsStartAsync has run');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef.get().then(\n  //  snapshot =>{\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // })\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA;AAEA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,4BAAxD;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAiCS,QAAjC,CAAjC,CAJoC,CAMpC;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUG,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CAACM,eAAe,CAACU,uBAAjB,EAAyCT,qBAAzC,CAAf;AACH","sourcesContent":["// moving fetchCollectionsStartAsync to this file\n\nimport {takeEvery, call} from 'redux-saga/effects'\n// takeEvery\n// creates non blocking call in order to create other sagas\n// can cancel tasks coming from \n// call\n// the code that invokes the method\nimport {firestore,convertCollectionsSnapshotToMap} from '../firebase/firebase-utils'\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions'\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('fetchCollectionsStartAsync has run')\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot)\n\n    // collectionRef.get().then(\n    //  snapshot =>{\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\n    // })\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}