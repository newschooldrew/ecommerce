{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { withSpinner } from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true // react will handle constructor and super\n\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","CollectionPage","updateCollections","withSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","setState","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAQC,cAAR,MAA4B,oCAA5B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,SAASC,WAAT,QAA4B,sDAA5B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;;AAEA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAC,IADJ,CAEJ;;AAFI,KAD2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACrE,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,WAAKG,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAC;AADE,OAAd;AAGH,KAN8B,CAA/B;AAOH;;AAELW,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAExB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEsB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEvB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQC;;AA7BkC;;AAgCvC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEe,cAAc,IAAIS,QAAQ,CAACxB,iBAAiB,CAACe,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAM2B,kBAAN,CAAP,CAAiClB,QAAjC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport  CollectionPage from \"../collection/collection.component\";\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport { withSpinner } from '../../components/with-spinner/with-spinner.component'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n    state = {\n        loading:true\n        // react will handle constructor and super\n    }\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n        const collectionRef = firestore.collection('collections');\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            console.log(collectionsMap);\n            this.setState({\n                loading:false\n            })\n        })\n    }\n\nrender(){    \n    const { match } = this.props;\n    return(\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n            {/* :categoryId\n            allows us to access this categoryID as a parameter on the match object */}\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n        </div>\n        )  \n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}