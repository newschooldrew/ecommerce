{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormIput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Sign in with your email\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormIput, {\n      type: \"email\",\n      label: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormIput, {\n      type: \"password\",\n      label: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormIput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport FormIput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\nimport './sign-in.styles.scss'\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            email:'',\n            password:''\n        }\n    }\n    \n    handleSubmit = async e =>{\n        e.preventDefault();\n        const {emailSignInStart} = this.props;\n        const {email,password} = this.state;\n        emailSignInStart(email,password)\n}\n\nhandleChange = e =>{\n    const {value,name} = e.target;\n    this.setState({[name]:value})\n}\nrender(){\n    const {googleSignInStart} = this.props;\n    return(\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email</span>\n            <form onSubmit={this.handleSubmit}>\n                <FormIput type=\"email\" label=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required/>\n\n                <FormIput type=\"password\" label=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required/>\n                <div className='buttons'>\n                    <CustomButton type=\"submit\" >Sign In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                        Sign In With Google\n                    </CustomButton>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email,password}))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}