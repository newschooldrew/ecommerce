{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n    console.error(err);\n  }\n}\nexport function* onGoogleSignInStart() {\n  try {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n  } catch (err) {}\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(emailSignInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInFailure","googleSignInSuccess","emailSignInFailure","emailSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","err","console","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAiDC,kBAAjD,EAAqEC,kBAArE,QAA8F,gBAA9F;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA2BE,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACK,mBAAmB,CAAC;AAACY,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAMC,GAAN,EAAU;AACR,UAAMnB,GAAG,CAACI,mBAAmB,CAACe,GAAD,CAApB,CAAT;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;AAED,OAAO,UAAUG,mBAAV,GAA+B;AAClC,MAAG;AACC,UAAMvB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH,GAFD,CAEE,OAAMQ,GAAN,EAAU,CAEX;AACJ;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACC,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMb,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA2BE,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,kBAAkB,CAAC;AAACU,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAMC,GAAN,EAAU;AACR,UAAMnB,GAAG,CAACM,kBAAkB,CAACa,GAAD,CAAnB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CACNC,IAAI,CAACoB,mBAAD,CADE,EACoBpB,IAAI,CAAC2B,kBAAD,CADxB,CAAD,CAAT;AAGH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport {UserActionTypes} from './user.types'\nimport {googleSignInFailure,googleSignInSuccess, emailSignInFailure, emailSignInSuccess} from './user.actions'\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument,user)\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({id:userSnapshot.id, ...userSnapshot.data()}))\n    } catch(err){\n        yield put(googleSignInFailure(err))\n        console.error(err)\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    try{\n        yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n    } catch(err){\n\n    }\n}\n\nexport function* signInWithEmail({payload:{email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument,user)\n        const userSnapshot = yield userRef.get()\n        yield put(emailSignInSuccess({id:userSnapshot.id, ...userSnapshot.data()}))\n    } catch(err){\n        yield put(emailSignInFailure(err))\n    }\n}\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}