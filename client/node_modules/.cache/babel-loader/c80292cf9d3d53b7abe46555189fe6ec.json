{"ast":null,"code":"import { createSelector } from 'reselect'; // input selector\n// function that gets the whole state and returns a slice of it\n// \n// we just want the cart\n\nconst selectCart = state => state.cart; // state gets passed from component\n\n\nexport const selectCartItems = createSelector( // input selector\n[selectCart], cart => cart.cartItems //grabs cartItems from state; see cart reducer\n);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => // pass to the component you want to use this function in\n// pass the destructred state of cart and its functionality\n// here to reference from that component\ncartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCart], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","selectCartHidden","hidden"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CACA;;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EACzC;AACA,CAACC,UAAD,CAFyC,EAGzCE,IAAI,IAAIA,IAAI,CAACE,SAH4B,CAIzC;AAJyC,CAAtC;AAOP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACT;AACA;AACA;AACAA,SAAS,CAACE,MAAV,CACI,CAACC,mBAAD,EAAqBC,QAArB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGI,CAHJ,CAN8C,CAA3C;AAYP,OAAO,MAAMC,eAAe,GAAGX,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCI,SAAS,IAAIA,SAAS,CAACE,MAAV,CACT,CAACC,mBAAD,EAAqBC,QAArB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFtB,EAGT,CAHS,CAF4B,CAAtC;AAQP,OAAO,MAAME,gBAAgB,GAAGZ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACU,MAF6B,CAAvC","sourcesContent":["import {createSelector} from 'reselect';\n\n// input selector\n// function that gets the whole state and returns a slice of it\n// \n// we just want the cart\nconst selectCart = state => state.cart;\n// state gets passed from component\n\nexport const selectCartItems = createSelector(\n    // input selector\n    [selectCart],\n    cart => cart.cartItems\n    //grabs cartItems from state; see cart reducer\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems =>\n    // pass to the component you want to use this function in\n    // pass the destructred state of cart and its functionality\n    // here to reference from that component\n    cartItems.reduce(\n        (accumulatedQuantity,cartItem)=>\n        accumulatedQuantity + cartItem.quantity, \n        0)\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCart],\n    cartItems => cartItems.reduce(\n        (accumulatedQuantity,cartItem)=>\n        accumulatedQuantity + cartItem.quantity, \n        0)\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)"]},"metadata":{},"sourceType":"module"}