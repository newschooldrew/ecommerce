{"ast":null,"code":"import _objectSpread from \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormIput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // const {email,password} = this.state;\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  }; // const {googleSignInStart} = this.props;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormIput, {\n    type: \"email\",\n    label: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormIput, {\n    type: \"password\",\n    label: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormIput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {connect} from 'react-redux'\nimport FormIput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\nimport './sign-in.styles.scss'\n\nconst SignIn = ({emailSignInStart,googleSignInStart}) => {\n    \n    const [userCredentials, setCredentials] = useState({email:'',password:''})\n\n    const {email,password} = userCredentials;\n    \n    const handleSubmit = async e =>{\n        e.preventDefault();\n        // const {email,password} = this.state;\n        emailSignInStart(email,password)\n}\n\nconst handleChange = e =>{\n    const {value,name} = e.target;\n    setCredentials({...userCredentials,[name]:value})\n}\n\n    // const {googleSignInStart} = this.props;\n    return(\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email</span>\n            <form onSubmit={handleSubmit}>\n                <FormIput type=\"email\" label=\"email\" name=\"email\" value={email} onChange={handleChange} required/>\n\n                <FormIput type=\"password\" label=\"password\" name=\"password\" value={password} onChange={handleChange} required/>\n                <div className='buttons'>\n                    <CustomButton type=\"submit\" >Sign In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                        Sign In With Google\n                    </CustomButton>\n                </div>\n            </form>\n        </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email,password}))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}