{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 69\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 75\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAQC,cAAR,MAA4B,oCAA5B;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,OAAOC,WAAP,MAAyB,sDAAzB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAGnCC,uBAHmC,GAGT,IAHS;AAAA;;AAKnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACR,MAAAA;AAAD,QAA+B,KAAKS,KAA1C;AACAT,IAAAA,0BAA0B;AAC7B;;AAELU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA;AAAR,QAAiC,KAAKH,KAA5C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGJ,KAAD,iBAAY,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEJ,KAAK,iBAAK,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQC;;AApBkC;;AAuBvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAACX;AADwB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACmB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport {createStructuredSelector} from 'reselect'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport  CollectionPage from \"../collection/collection.component\";\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selector'\nimport withSpinner  from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n        const {fetchCollectionsStartAsync} = this.props;\n        fetchCollectionsStartAsync()\n    }\n\nrender(){    \n    const { match,isCollectionFetching } = this.props;\n    return(\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} render={(props) => (<CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />)}/>\n            {/* :categoryId\n            allows us to access this categoryID as a parameter on the match object */}\n            <Route path={`${match.path}/:collectionId`} render={props => (<CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />)}/>\n        </div>\n        )  \n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching:selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}