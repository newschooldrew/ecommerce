{"ast":null,"code":"import _objectSpread from \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        signUpCredentials = _useState2[0],\n        setsignUpCredentials = _useState2[1];\n\n  const displayName = signUpCredentials.displayName,\n        email = signUpCredentials.email,\n        password = signUpCredentials.password,\n        confirmPassword = signUpCredentials.confirmPassword;\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // const {signUpStart} = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setsignUpCredentials(_objectSpread({}, signUpCredentials, {\n      [name]: value\n    }));\n  }; // const {displayName,email,password,confirmPassword} = this.state;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"I don't have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","signUpCredentials","setsignUpCredentials","handleSubmit","e","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/user.actions'\n\nimport './sign-up.styles.scss'\n\nconst SignUp = ({signUpStart}) => {\n\n    \n    const [signUpCredentials, setsignUpCredentials] = useState({displayName:'',email:'',password:'',confirmPassword:''})\n    const {displayName,email,password,confirmPassword} = signUpCredentials;\n\n    const handleSubmit = async e => {\n            e.preventDefault();\n            // const {signUpStart} = this.props;\n        if(password !== confirmPassword){\n            alert(\"passwords don't match\");\n            return;\n        }\n        signUpStart({displayName,email,password});\n    }\n\n    const handleChange = e => {\n        const {name,value} = e.target;\n\n        setsignUpCredentials({...signUpCredentials,[name]:value})\n    }\n\n        // const {displayName,email,password,confirmPassword} = this.state;\n        return(\n            <div className='sign-up'>\n                <h2 className='title'>I don't have an account</h2>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        label='Confirm password'\n                        required\n                    />\n                    <CustomButton \n                        type=\"submit\">Sign Up</CustomButton>\n                </form>\n            </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch =>({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}