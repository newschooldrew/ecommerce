{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true // react will handle constructor and super\n\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/drews-shop/databases/(default)/documents').then(res => res.json()); // this.unsubscribeFromSnapshot = collectionRef.get()\n    // .then(\n    //  snapshot =>{\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({\n    //         loading:false\n    //     })\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 69\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 75\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","CollectionPage","updateCollections","withSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","res","json","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAQC,cAAR,MAA4B,oCAA5B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAyB,sDAAzB;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAC,IADJ,CAEJ;;AAFI,KAD2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACX,MAAAA;AAAD,QAAsB,KAAKY,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,KAAK,CAAC,uFAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAHe,CAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAELC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGT,KAAD,iBAAY,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAET,KAAK,iBAAK,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQC;;AAnCkC;;AAsCvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAAID,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe5B,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport  CollectionPage from \"../collection/collection.component\";\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport withSpinner  from '../../components/with-spinner/with-spinner.component'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n    state = {\n        loading:true\n        // react will handle constructor and super\n    }\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n        const {updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n        fetch('https://firestore.googleapis.com/v1/projects/drews-shop/databases/(default)/documents')\n        .then(res => res.json())\n        // this.unsubscribeFromSnapshot = collectionRef.get()\n        // .then(\n        //  snapshot =>{\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({\n        //         loading:false\n        //     })\n        // })\n    }\n\nrender(){    \n    const { match } = this.props;\n    const {loading} = this.state;\n    return(\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} render={(props) => (<CollectionsOverviewWithSpinner isLoading={loading} {...props} />)}/>\n            {/* :categoryId\n            allows us to access this categoryID as a parameter on the match object */}\n            <Route path={`${match.path}/:collectionId`} render={props => (<CollectionPageWithSpinner isLoading={loading} {...props} />)}/>\n        </div>\n        )  \n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}