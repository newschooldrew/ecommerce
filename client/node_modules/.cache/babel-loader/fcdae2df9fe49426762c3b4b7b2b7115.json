{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth =>{\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     userRef.onSnapshot(snapShot => {\n    //         this.props.setCurrentUser({\n    //             id:snapShot.id,\n    //             ...snapShot.data()\n    //           })\n    //         })\n    //       } \n    //         setCurrentUser(userAuth)\n    // key is collections\n    // })\n    // method from firebase.auth()\n    // takes function where param is \n    // what the user state is of the \n    // auth on our firebase project\n    // this.setState({currentUser:user})\n    // console.log(user)\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth(); //closing subscription\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 78\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 100\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)) // way for redux to know the object you're \n  // passing is an action object to pass\n  // to every reducer\n\n}); //connect(mapDispatchToProps,)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","selectCurrentUser","HomePage","ShopPage","Header","SignInAndSignUp","auth","createUserProfileDocument","setCurrentUser","CheckoutPage","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;;AAEA,OAAO,WAAP;AAEA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,eAAP,MAA4B,+DAA5B;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAElCC,mBAFkC,GAEZ,IAFY;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACL,MAAAA;AAAD,QAAmB,KAAKM,KAA9B,CADiB,CAEnB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AAEN;AACA;AACA;AACA;AACA;AACE;AACA;AAEH;;AAEDC,EAAAA,oBAAoB,GAAE;AACpB,SAAKH,mBAAL,GADoB,CAEpB;AACD;;AAECI,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAcI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEd,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,MAAM,KAAKW,KAAL,CAAWG,WAAX,gBAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,gBAA+C,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAER,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAdJ,CADF;AAuBC;;AA3D+B;;AA8DlC,MAAMS,eAAe,GAAGlB,wBAAwB,CAAC;AAC7CiB,EAAAA,WAAW,EAAChB;AADiC,CAAD,CAAhD;;AAIA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,cAAc,EAAEa,IAAI,IAAID,QAAQ,CAACZ,cAAc,CAACa,IAAD,CAAf,CADM,CAEtC;AACA;AACA;;AAJsC,CAAL,CAAnC,C,CAOA;;;AACA,eAAetB,OAAO,CAACmB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CT,GAA5C,CAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {selectCurrentUser} from './redux/user/user.selectors'\nimport HomePage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component.jsx'\nimport Header from './components/header/header.component.jsx'\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx'\nimport {auth, createUserProfileDocument} from './firebase/firebase.utils'\nimport { setCurrentUser } from './redux/user/user.actions'\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n\nunsubscribeFromAuth = null;\n\ncomponentDidMount(){\n  const {setCurrentUser} = this.props;\n// this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth =>{\n//   if(userAuth){\n//     const userRef = await createUserProfileDocument(userAuth);\n\n//     userRef.onSnapshot(snapShot => {\n//         this.props.setCurrentUser({\n//             id:snapShot.id,\n//             ...snapShot.data()\n//           })\n//         })\n//       } \n//         setCurrentUser(userAuth)\n        // key is collections\n      \n  // })\n  // method from firebase.auth()\n  // takes function where param is \n  // what the user state is of the \n  // auth on our firebase project\n    // this.setState({currentUser:user})\n    // console.log(user)\n\n}\n\ncomponentWillUnmount(){\n  this.unsubscribeFromAuth();\n  //closing subscription\n}\n\n  render(){\n  return (\n    <div>\n      <Header/>\n      {/* route gives us \n        - history\n          + history.push gives us ability to change routes\n            * useful for onClick methods to history.push('/linkToPage')\n        - match\n          + \"url\" \n          + \"params.<Id>\"\n            * helpful for path='/topics/:topicId'\n        - location : where we are currently\n          + hash and search\n          + \"pathname\" gives us the full pathname\n        */}\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/signin' render={() => this.props.currentUser ? <Redirect to='/' /> : <SignInAndSignUp />} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n        </Switch>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser:selectCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n  // way for redux to know the object you're \n  // passing is an action object to pass\n  // to every reducer\n})\n\n//connect(mapDispatchToProps,)\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}