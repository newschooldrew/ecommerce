{"ast":null,"code":"import _objectSpread from \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => // returns a new array\n    // this returns a new version of our state\n    // so our components know how to re render properly\n    cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  // find out if there is an item in the count\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // check if quantity is one\n  // you want to keep the values where they dont match\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // bring in cartItem\n\n\n  return cartItems.map(cartItem => cartItem.id == cartItemToRemove.id ? _objectSpread({}, cartItem, {\n    quantity: cartItem.quantity - 1\n  }) : cartItem // otherwise decrease the quantity                \n  // the new value of quantity is whatever that items quantity is, minus 1\n  );\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA6B;AACtD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAGA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAAzB;;AAGI,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACrB;AACA;AACA;AACAA,IAAAA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACMD,QADN;AACgBG,MAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAoB;AAD7C,SAEEH,QANH,CAAP;AAQH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAkBC,aAAlB;AAAgCM,IAAAA,QAAQ,EAAC;AAAzC,KAAP;AACH,CAhBE;AAkBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAWS,gBAAX,KAAgC;AAClE;AACI,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACjBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAD5B,CAAzB,CAF8D,CAK1D;AACA;;AACA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAmC;AAC/B,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACC,GATqD,CAUlD;;;AACH,SAAQL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACvBA,QAAQ,CAACC,EAAT,IAAeI,gBAAgB,CAACJ,EAAhC,qBACMD,QADN;AACeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD7C,OAEEH,QAHD,CAIL;AACA;AALK,GAAR;AAQJ,CAnBF","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) =>{\n    const existingCartItem = cartItems.find(\n        cartItem =>cartItem.id === cartItemToAdd.id\n        )\n        if(existingCartItem){\n            return cartItems.map(cartItem =>\n                    // returns a new array\n                    // this returns a new version of our state\n                    // so our components know how to re render properly\n                    cartItem.id === cartItemToAdd.id\n                    ? {...cartItem, quantity:cartItem.quantity + 1}\n                    : cartItem\n            )\n        }\n\n        return [...cartItems,{...cartItemToAdd,quantity:1}]\n    }\n\nexport const removeItemFromCart = (cartItems,cartItemToRemove) => {\n// find out if there is an item in the count\n    const existingCartItem = cartItems.find(\n            cartItem => cartItem.id === cartItemToRemove.id\n        )\n        // check if quantity is one\n        // you want to keep the values where they dont match\n        if(existingCartItem.quantity === 1){\n            return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n            }\n                // bring in cartItem\n             return  cartItems.map(cartItem => \n                    cartItem.id == cartItemToRemove.id\n                    ? {...cartItem,quantity: cartItem.quantity - 1}\n                    : cartItem\n                // otherwise decrease the quantity                \n                // the new value of quantity is whatever that items quantity is, minus 1\n                    \n            )\n        }"]},"metadata":{},"sourceType":"module"}