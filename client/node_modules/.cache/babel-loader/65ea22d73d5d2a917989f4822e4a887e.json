{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils.js';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...currentState,\n        hidden: !currentState.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...currentState,\n        cartItems: addItemToCart(currentState.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...currentState,\n        // if the id of the item you pass in doesnt match the id of the item in your cart\n        // then you keep it\n        // otherwise filter it out\n        cartItems: currentState.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...currentState,\n        cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n      };\n\n    default:\n      return currentState;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","currentState","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAuBC,kBAAvB,QAAgD,iBAAhD;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAC,IADW;AAElBC,EAAAA,SAAS,EAAC;AAFQ,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,YAAY,GAAGJ,aAAhB,EAA8BK,MAA9B,KAAwC;AACxD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,eAAe,CAACU,kBAArB;AACI,aAAM,EACF,GAAGH,YADD;AAEFH,QAAAA,MAAM,EAAC,CAACG,YAAY,CAACH;AAFnB,OAAN;;AAKJ,SAAKJ,eAAe,CAACW,QAArB;AACI,aAAM,EACF,GAAGJ,YADD;AAEFF,QAAAA,SAAS,EAACJ,aAAa,CAACM,YAAY,CAACF,SAAd,EAAyBG,MAAM,CAACI,OAAhC;AAFrB,OAAN;;AAKJ,SAAKZ,eAAe,CAACa,oBAArB;AACI,aAAM,EACF,GAAGN,YADD;AAEF;AACA;AACA;AACAF,QAAAA,SAAS,EAACE,YAAY,CAACF,SAAb,CAAuBS,MAAvB,CACNC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAeR,MAAM,CAACI,OAAP,CAAeI,EADpC;AALR,OAAN;;AAUJ,SAAKhB,eAAe,CAACiB,WAArB;AACI,aAAM,EACF,GAAGV,YADD;AAEFF,QAAAA,SAAS,EAACH,kBAAkB,CAACK,YAAY,CAACF,SAAd,EAAwBG,MAAM,CAACI,OAA/B;AAF1B,OAAN;;AAKA;AACI,aAAOL,YAAP;AAhCZ;AAkCC,CAnCL;;AAqCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types'\nimport {addItemToCart, removeItemFromCart} from './cart.utils.js'\n\nconst INITIAL_STATE = {\n    hidden:true,\n    cartItems:[]\n}\n\nconst cartReducer = (currentState = INITIAL_STATE,action) =>{\n    switch(action.type){\n\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return{\n                ...currentState,\n                hidden:!currentState.hidden\n            };\n\n        case CartActionTypes.ADD_ITEM:\n            return{\n                ...currentState,\n                cartItems:addItemToCart(currentState.cartItems, action.payload)\n            }\n\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n            return{\n                ...currentState,\n                // if the id of the item you pass in doesnt match the id of the item in your cart\n                // then you keep it\n                // otherwise filter it out\n                cartItems:currentState.cartItems.filter(\n                    cartItem => cartItem.id !==action.payload.id\n                    )\n            }\n\n        case CartActionTypes.REMOVE_ITEM:\n            return{\n                ...currentState,\n                cartItems:removeItemFromCart(currentState.cartItems,action.payload)\n            }\n            \n            default:\n                return currentState;\n        }\n    }\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}