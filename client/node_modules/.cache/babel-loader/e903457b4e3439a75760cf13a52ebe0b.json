{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk'; // allows us to cache store\n\nimport rootReducer from './root-reducer';\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger); // push logger into array when environment is dev\n} // create-react-app sets environment variable\n// can be called through calling \"env\"\n// \"production\",  \"environment\", or  \"test\"\n// yarn build -> switch \"env\" to \n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // persisted version of our store\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n}; // persist: checking if anything exists\n// if there is then I want to rehydrate","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","thunk","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB;;AAEA,IAAGG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB,EADsC,CAEtC;AACH,C,CACD;AACA;AACA;AACA;;;AAEA,OAAO,MAAMS,KAAK,GAAGX,WAAW,CAACK,WAAD,EAAaJ,eAAe,CAAC,GAAGK,WAAJ,CAA5B,CAAzB,C,CACP;;AACA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CAACQ,KAAD,CAA9B;AACP,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf,C,CAEA;AACA","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport {persistStore} from 'redux-persist'\nimport thunk from 'redux-thunk';\n// allows us to cache store\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [thunk]\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger)\n    // push logger into array when environment is dev\n}\n// create-react-app sets environment variable\n// can be called through calling \"env\"\n// \"production\",  \"environment\", or  \"test\"\n// yarn build -> switch \"env\" to \n\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares))\n// persisted version of our store\nexport const persistor = persistStore(store)\nexport default {store, persistor};\n\n// persist: checking if anything exists\n// if there is then I want to rehydrate"]},"metadata":{},"sourceType":"module"}