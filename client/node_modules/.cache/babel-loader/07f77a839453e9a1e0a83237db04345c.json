{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); // we dont want use useEffect again so\n  // we add fetchCollectionsStart as a dependency bc\n  // we know that fetchCollectionsStart is not going to re-render\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","connect","Route","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAQC,uBAAR,MAAqC,oCAArC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,qBAAD;AAAwBI,EAAAA;AAAxB,CAAD,KAAoC;AAEjDT,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,qBAAqB;AACxB,GAFQ,EAEP,CAACA,qBAAD,CAFO,CAAT,CAFiD,CAMrD;AACA;AACA;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEJ,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEH,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASC,CAlBL;;AAqBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAMQ,kBAAN,CAAP,CAAiCH,QAAjC,CAAf","sourcesContent":["import React, {useEffect, lazy, Suspense} from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport {fetchCollectionsStart} from '../../redux/shop/shop.actions'\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'\nimport  CollectionPageContainer from \"../collection/collection.container\";\n\nconst ShopPage = ({fetchCollectionsStart, match}) => {\n\n    useEffect(()=>{\n        fetchCollectionsStart()\n    },[fetchCollectionsStart])\n\n// we dont want use useEffect again so\n// we add fetchCollectionsStart as a dependency bc\n// we know that fetchCollectionsStart is not going to re-render\n    return(\n        <div className='shop-page'>\n            \n            <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}/>\n            {/* :categoryId\n            allows us to access this categoryID as a parameter on the match object */}\n            <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n        </div>\n        )  \n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}