{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { signUpFailure, signUpSuccess, signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpStart } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* completeSignOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(signUpFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, completeSignOut);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onGoogleSignInStart() {\n  try {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n  } catch (err) {}\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/ecommerce/drews-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signUpFailure","signUpSuccess","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpStart","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","err","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","completeSignOut","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onSignOutStart","SIGN_OUT_START","onSignUpSuccess","SIGN_UP_SUCCESS","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport {UserActionTypes} from './user.types'\nimport {signUpFailure,signUpSuccess,signInFailure,signInSuccess, signOutFailure, signOutSuccess, signUpStart} from './user.actions'\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\n\nexport function* getSnapshotFromUserAuth(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument,userAuth)\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({id:userSnapshot.id, ...userSnapshot.data()}))\n    } catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    } catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* signInWithEmail({payload:{email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user)\n    } catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* isUserAuthenticated (){\n    try{\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth)\n    } catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* completeSignOut(){\n    try{\n        yield auth.signOut()\n        yield put(signOutSuccess())\n    } catch(err){\n        yield put(signOutFailure(err))\n    }\n}\n\nexport function* signUp({payload:{displayName,email,password}}){\n    try{\n        const { user } = yield auth.createUserWithEmailAndPassword(email,password);\n        yield put(signUpSuccess({user,additionalData:{displayName}}))\n\n    } catch(err){\n        yield put(signUpFailure(err))\n    }\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,completeSignOut)\n}\n\nexport function* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* onGoogleSignInStart(){\n    try{\n        yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n    } catch(err){\n\n    }\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n    }\n\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)\n    ])\n}"]},"metadata":{},"sourceType":"module"}