{"version":3,"sources":["redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx"],"names":["__webpack_require__","d","__webpack_exports__","selectCollectionsForPreview","selectCollection","selectIsCollectionFetching","selectIsCollectionsLoaded","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","state","shop","selectCollections","createSelector","collections","Object","keys","map","key","collectionUrlParam","isFetching","withSpinner","WrappedComponent","_ref","isLoading","otherProps","_Users_andrewperez_Documents_projects_ecommerce_drews_shop_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_redux_cart_cart_actions__WEBPACK_IMPORTED_MODULE_2__","_custom_button_custom_button_component__WEBPACK_IMPORTED_MODULE_4__","connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","concat","onClick","inverted","ownProps","collection","match","params","collectionId","items","title","react_default","collection_item_component","id","mapStateToProps","createStructuredSelector","collectionPageContainer","compose","WithSpinner","CollectionPage"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,IAEMQ,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,GACD,SAAAE,GAAI,OAAIA,EAAKG,cAGJV,EACTS,YACI,CAACD,GAID,SAAAE,GAAW,OAAIA,EAAcC,OAAOC,KAAKF,GAAaG,IAAI,SAAAC,GAAG,OAAIJ,EAAYI,KAAQ,KAEhFb,EAAmB,SAAAc,GAAkB,OAC9CN,YACI,CAACD,GACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYK,GAAsB,QAG1Db,EAA6BO,YACtC,CAACJ,GACD,SAAAE,GAAI,OAAIA,EAAKS,aAGJb,EAA4BM,YACrC,CAACJ,GAGD,SAAAE,GAAI,QAAMA,EAAKG,oFCzBJO,IAJK,SAAAC,GAAgB,OAAI,SAAAC,GAA+B,IAA7BC,EAA6BD,EAA7BC,UAAaC,EAAgBV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,eACnE,OAAOC,EAAYG,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAcH,EAAAC,EAAAC,cAACP,EAAqBG,uCCJ3D,IAAAM,EAAA9B,EAAA,GAAA+B,EAAA/B,EAAAgC,EAAAF,GAAAG,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAA,IAAAmC,GAAAnC,EAAA,KAAAA,EAAA,KA6BeoC,gBAAQ,KAJI,SAAAC,GAAQ,MAAI,CAC/BC,QAAQ,SAAAC,GAAI,OAAIF,EAASC,YAAQC,OAG1BH,CAvBQ,SAAAd,GAAqB,IAAnBiB,EAAmBjB,EAAnBiB,KAAMD,EAAahB,EAAbgB,QACpBE,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SACpB,OACAX,EAAAJ,EAAAC,cAAA,OAAKe,UAAU,mBACXZ,EAAAJ,EAAAC,cAAA,OACAe,UAAU,QACVC,MAAO,CACHC,gBAAe,OAAAC,OAAQJ,EAAR,QAGnBX,EAAAJ,EAAAC,cAAA,OAAKe,UAAU,qBACXZ,EAAAJ,EAAAC,cAAA,QAAMe,UAAU,QAAQH,GACxBT,EAAAJ,EAAAC,cAAA,QAAMe,UAAU,SAASF,IAE7BV,EAAAJ,EAAAC,cAACO,EAAA,EAAD,CAAcY,QAAS,kBAAKT,EAAQC,IAAOS,UAAQ,GAAnD,uLCIOZ,cAJS,SAAC3B,EAAOwC,GAAR,MAAqB,CACzCC,WAAW9C,YAAiB6C,EAASE,MAAMC,OAAOC,aAAvCjD,CAAqDK,KAGrD2B,CAjBQ,SAAAd,GAAkB,IAAhB4B,EAAgB5B,EAAhB4B,WACdI,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,MAClB,OACIC,EAAA7B,EAAAC,cAAA,OAAKe,UAAU,mBACPa,EAAA7B,EAAAC,cAAA,MAAIe,UAAU,SAASY,GACvBC,EAAA7B,EAAAC,cAAA,OAAKe,UAAU,SAEPW,EAAMtC,IAAI,SAAAuB,GAAI,OAAGiB,EAAA7B,EAAAC,cAAC6B,EAAA,EAAD,CAAgBxC,IAAKsB,EAAKmB,GAAInB,KAAMA,UCPnEoB,EAAkBC,YAAyB,CAC7CrC,UAAW,SAAAd,GAAK,OAAKH,YAA0BG,MAG7CoD,EAA0BC,YAC5B1B,YAAQuB,GACRI,IAF4BD,CAG9BE,GAEaH","file":"static/js/6.d4eb6406.chunk.js","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview =\n    createSelector(\n        [selectCollections],\n        //get the keys\n        // map the keys\n        // get the value\n        collections => collections ? Object.keys(collections).map(key => collections[key]) : [])\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => collections ? collections[collectionUrlParam] : null\n    )\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    // if collections is loaded you'll get true\n    // if not you'll get false\n    shop => !!shop.collections)","import React from 'react'\nimport Spinner from '../spinner/spinner.component'\n\nconst withSpinner = WrappedComponent => ({isLoading,...otherProps}) => {\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />\n    }\n\nexport default withSpinner;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addItem} from '../../redux/cart/cart.actions'\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component'\n\nconst collectionItem = ({item, addItem}) => {\n    const {name, price, imageUrl} = item;\n    return (\n    <div className='collection-item'>\n        <div \n        className='image'\n        style={{\n            backgroundImage:`url(${imageUrl})`\n        }}\n        />\n        <div className='collection-footer'>\n            <span className='name'>{name}</span>\n            <span className='price'>{price}</span>\n        </div>\n        <CustomButton onClick={()=> addItem(item)} inverted>ADD TO CART</CustomButton>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch =>({\n        addItem:item => dispatch(addItem(item))\n})\n\nexport default connect(null,mapDispatchToProps)(collectionItem)","import React from 'react';\nimport {connect} from 'react-redux'\nimport './collection.styles.scss'\nimport CollectionItem from '../../components/collection-item/collection-item.component'\nimport {selectCollection} from '../../redux/shop/shop.selector'\n\n\nconst CollectionPage = ({collection}) => {\n    const {items, title} = collection;\nreturn (\n    <div className='collection-page'>\n            <h2 className='title'>{title}</h2>\n            <div className='items'>\n                {\n                    items.map(item=>(<CollectionItem key={item.id} item={item} />))\n                }\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state, ownProps) =>({\n    collection:selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps)(CollectionPage);","import {connect} from 'react-redux'\nimport {compose} from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport {selectIsCollectionsLoaded} from '../../redux/shop/shop.selector'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionPage from './collection.component'\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: state => !selectIsCollectionsLoaded(state)\n})\n\nconst collectionPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionPage)\n\nexport default collectionPageContainer;\n\n// containers dont render anything\n// containers just pass props"],"sourceRoot":""}