{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","_ref","cartItem","name","quantity","price","imageUrl","react_default","a","createElement","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","main_default","label","billingAddress","shippingAddress","image","description","concat","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","checkout_item_component","key","id","stripe_button_component"],"mappings":"0MA+BeA,cAAQ,KANI,SAAAC,GAAQ,MAAI,CACnCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,OAG7BH,CAxBM,SAAAO,GAA8C,IAA5CC,EAA4CD,EAA5CC,SAASN,EAAmCK,EAAnCL,UAAWG,EAAwBE,EAAxBF,QAASC,EAAeC,EAAfD,WACzCG,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAASC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAC7B,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAUM,IAAI,UAE5BL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQP,GACxBI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQG,QAAS,kBAAMd,EAAQG,KAA9C,UACAK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASN,GACzBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQG,QAAS,kBAAMb,EAAWE,KAAjD,WAEJK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASL,GACzBE,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAKjB,EAAUM,IAAWQ,UAAU,iBAAlD,iDCuBOI,EAxCc,SAAAb,GAAe,IAAZI,EAAYJ,EAAZI,MACxBU,EAAyB,IAARV,EAuBvB,OACEE,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,MAAM,UACNd,KAAK,qBACLe,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,kBAAAC,OAAoBjB,GAC/BkB,OAAQR,EACRS,WAAW,UACXC,MA9BY,SAAAA,GACdC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQR,EACRU,MAAOA,KAGRK,KAAK,SAAAC,GACJC,MAAM,uBAEPC,MAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,+FAgBJK,UAjCmB,gDCoCnBC,gBAAkBC,YAAyB,CAC7CC,UAAUC,IACVC,MAAOC,OAKIjD,sBAAQ4C,EAAR5C,CAvCM,SAAAO,GAAA,IAAEuC,EAAFvC,EAAEuC,UAAUE,EAAZzC,EAAYyC,MAAZ,OACjBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,wBAGP+B,EAAUI,IAAI,SAAA1C,GAAQ,OAAKK,EAAAC,EAAAC,cAACoC,EAAD,CAAcC,IAAK5C,EAAS6C,GAAI7C,SAAUA,MAEtEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBAAeiC,GACfnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAIfH,EAAAC,EAAAC,cAACuC,EAAD,CAAsB3C,MAAOqC","file":"static/js/7.6601ac39.chunk.js","sourcesContent":["import React from 'react'\nimport './checkout-item.styles.scss'\n\nimport {connect} from 'react-redux';\n\nimport {clearItemFromCart, addItem, removeItem} from '../../redux/cart/cart.actions'\n\nconst checkoutItem = ({cartItem,clearItem, addItem, removeItem}) =>{\n    const {name, quantity,price, imageUrl} = cartItem;\n    return (\n    <div className='checkout-item'>\n        <div className='image-container'>\n            <img src={imageUrl} alt='item' />\n        </div>\n        <span className='name'>{name}</span>\n        <span className='quantity'>\n            <div className='arrow' onClick={() => addItem(cartItem)}>&#10133;</div>\n            <span className='value'>{quantity}</span>\n            <div className='arrow' onClick={() => removeItem(cartItem)}>&#10134;</div>\n        </span>\n        <span className='price'>{price}</span>\n        <div onClick={()=> clearItem(cartItem)} className='remove-button'>&#10008;</div>\n    </div>\n        )\n    }\nconst mapDispatchToProps = dispatch =>({\n    clearItem: item => dispatch(clearItemFromCart(item)),\n    addItem: item => dispatch(addItem(item)),\n    removeItem: item => dispatch(removeItem(item))\n})\n\nexport default connect(null,mapDispatchToProps)(checkoutItem);","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_i7bJE84QP11alRDH8lY2Twkw00Jl1wYTZb';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    })\n      .then(response => {\n        alert('succesful payment');\n      })\n      .catch(error => {\n        console.log('Payment Error: ', error);\n        alert(\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='CRWN Clothing Ltd.'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\nimport {selectCartItems,selectCartTotal} from '../../redux/cart/cart.selectors'\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component'\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component'\n\nimport './checkout.styles.scss'\nimport CartItem from '../../components/cart-item/cart-item.component'\n\nconst CheckoutPage = ({cartItems,total}) => (\n    <div className='checkout-page'>\n        <div className='checkout-header'>\n            <div className='header-block'>\n                <span>Product</span>\n            </div>\n            <div className='header-block'>\n                <span>Description</span>\n            </div>\n            <div className='header-block'>\n                <span>Quantity</span>\n            </div>\n            <div className='header-block'>\n                <span>Price</span>\n            </div>\n            <div className='header-block'>\n                <span>Remove</span>\n            </div>\n        </div>\n        {cartItems.map(cartItem => (<CheckoutItem key={cartItem.id} cartItem={cartItem}/>))}\n        \n        <div className='total'>\n            <span>TOTAL: ${total}</span>\n            <div className='test-warning'>\n                {/* 42 is the credit card\n                Use any future date and a CVV of 123 */}\n            </div>\n            <StripeCheckoutButton price={total} />\n        </div>\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems:selectCartItems,\n    total: selectCartTotal\n})\n\n\n\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}