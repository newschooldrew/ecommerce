{"version":3,"sources":["redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx","components/preview-collection/preview-collection.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["__webpack_require__","d","__webpack_exports__","selectCollectionsForPreview","selectCollection","selectIsCollectionFetching","selectIsCollectionsLoaded","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","state","shop","selectCollections","createSelector","collections","Object","keys","map","key","collectionUrlParam","isFetching","withSpinner","WrappedComponent","_ref","isLoading","otherProps","_Users_andrewperez_Documents_projects_ecommerce_drews_shop_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_redux_cart_cart_actions__WEBPACK_IMPORTED_MODULE_2__","_custom_button_custom_button_component__WEBPACK_IMPORTED_MODULE_4__","connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","concat","onClick","inverted","PreviewCollection","title","items","react_default","filter","i","collection_item_component","id","mapStateToProps","createStructuredSelector","console","log","collection","preview_collection_component","collectionsOverviewContainer","compose","WithSpinner","CollectionsOverview"],"mappings":"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","file":"static/js/4.fad7c0bc.chunk.js","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview =\n    createSelector(\n        [selectCollections],\n        //get the keys\n        // map the keys\n        // get the value\n        collections => collections ? Object.keys(collections).map(key => collections[key]) : [])\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => collections ? collections[collectionUrlParam] : null\n    )\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    // if collections is loaded you'll get true\n    // if not you'll get false\n    shop => !!shop.collections)","import React from 'react'\nimport Spinner from '../spinner/spinner.component'\n\nconst withSpinner = WrappedComponent => ({isLoading,...otherProps}) => {\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />\n    }\n\nexport default withSpinner;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addItem} from '../../redux/cart/cart.actions'\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component'\n\nconst collectionItem = ({item, addItem}) => {\n    const {name, price, imageUrl} = item;\n    return (\n    <div className='collection-item'>\n        <div \n        className='image'\n        style={{\n            backgroundImage:`url(${imageUrl})`\n        }}\n        />\n        <div className='collection-footer'>\n            <span className='name'>{name}</span>\n            <span className='price'>{price}</span>\n        </div>\n        <CustomButton onClick={()=> addItem(item)} inverted>ADD TO CART</CustomButton>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch =>({\n        addItem:item => dispatch(addItem(item))\n})\n\nexport default connect(null,mapDispatchToProps)(collectionItem)","import React from 'react'\nimport CollectionItem from '../collection-item/collection-item.component'\nimport './preview-collection.styles.scss'\n\nconst PreviewCollection = ({title,items}) =>(\n    <div className='preview-collection'>\n        <h1 className='title'>{title}</h1>\n        <div className='preview'>\n            {\n                items\n                .filter((item,i) => i <4)\n                .map(item =>(\n                    <CollectionItem key={item.id} item={item} price={item.price} name={item.name} imageUrl={item.imageUrl}/>\n                ))\n            }\n        </div>\n    </div>\n)\n\nexport default PreviewCollection;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport PreviewCollection from '../preview-collection/preview-collection.component'\nimport {selectCollectionsForPreview} from '../../redux/shop/shop.selector'\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({collections}) => {\nconsole.log(collections)\nreturn (\n    <div className='collections-overview'>\n            {\n                collections.map(collection => (\n                    <PreviewCollection key={collection.id} title={collection.title}items={collection.items} />\n                ))}\n    </div>\n)\n                }\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n})\n\nexport default connect(mapStateToProps)(CollectionsOverview)","import {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\nimport {compose} from 'redux'\n\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selector'\nimport WithSpinner from '../with-spinner/with-spinner.component'\nimport CollectionsOverview from './collections-overview.component'\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading:selectIsCollectionFetching\n    // here we have to set the name of the the prop\n    // to be the one that the WithSpinner (HOC) is expecting\n})\n\n// const collectionsOverviewContainer = connect(mapStateToProps)(WithSpinnger(CollectionsOverview))\n\n// compose allows you to curry functions together\n\nconst collectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionsOverview)\n\nexport default collectionsOverviewContainer;"],"sourceRoot":""}