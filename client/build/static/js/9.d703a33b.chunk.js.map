{"version":3,"sources":["pages/shop/shop.component.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_redux_shop_shop_actions__WEBPACK_IMPORTED_MODULE_3__","_components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_4__","CollectionsOverviewContainer","lazy","e","then","bind","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","_ref","match","useEffect","a","createElement","className","fallback","exact","path","concat","component"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAMMU,EAA+BC,eAAK,kBAAIX,EAAAY,EAAA,GAAAC,KAAAb,EAAAc,KAAA,aACxCC,EAA0BJ,eAAK,kBAAMX,EAAAY,EAAA,GAAAC,KAAAb,EAAAc,KAAA,aA4B5BE,sBAAQ,KAJI,SAAAC,GAAQ,MAAK,CACpCC,sBAAuB,kBAAMD,EAASC,kBAG3BF,CA1BE,SAAAG,GAAoC,IAAlCD,EAAkCC,EAAlCD,sBAAuBE,EAAWD,EAAXC,MAStC,OAPAC,oBAAU,WACNH,KACF,CAACA,IAMCd,EAAAkB,EAAAC,cAAA,OAAKC,UAAU,aACXpB,EAAAkB,EAAAC,cAACpB,EAAA,SAAD,CAAUsB,SAAUrB,EAAAkB,EAAAC,cAACd,EAAA,EAAD,OAChBL,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,OAAK,EAACC,KAAI,GAAAC,OAAKR,EAAMO,MAAQE,UAAWnB,IAG/CN,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,CAAOoB,KAAI,GAAAC,OAAKR,EAAMO,KAAX,kBAAiCE,UAAWd","file":"static/js/9.d703a33b.chunk.js","sourcesContent":["import React, {useEffect, lazy, Suspense} from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport {fetchCollectionsStart} from '../../redux/shop/shop.actions'\nimport Spinner from '../../components/spinner/spinner.component'\n\nconst CollectionsOverviewContainer = lazy(()=>import('../../components/collections-overview/collections-overview.container'))\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'))\n\nconst ShopPage = ({fetchCollectionsStart, match}) => {\n\n    useEffect(()=>{\n        fetchCollectionsStart()\n    },[fetchCollectionsStart])\n\n// we dont want use useEffect again so\n// we add fetchCollectionsStart as a dependency bc\n// we know that fetchCollectionsStart is not going to re-render\n    return(\n        <div className='shop-page'>\n            <Suspense fallback={<Spinner />}>\n                <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}/>\n                {/* :categoryId\n            allows us to access this categoryID as a parameter on the match object */}\n                <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n            </Suspense>\n        </div>\n        )  \n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"],"sourceRoot":""}